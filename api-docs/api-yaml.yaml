openapi: 3.0.4
info:
  title: Lee Shopping API
  version: 1.0.0
  description: |
    Lee Shopping API 명세서 

servers:
  - url: 'http://localhost:8080'
paths:
  /brands/categories/lowest:
    get:
      summary: 단일 브랜드로 모든 카테고리 상품을 최저가격으로 구매할 때의 정보 조회
      tags:
        - Brand
      responses:
        '200':
          description: 최저 가격 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandSetLowestResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /brands:
    post:
      summary: 브랜드 등록
      operationId: registerBrand
      tags:
        - Brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
      responses:
        '200':
          description: 브랜드 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /brands/{brandId}:
    delete:
      summary: 브랜드 삭제
      operationId: deleteBrand
      tags:
        - Brand
      parameters:
        - in: path
          name: brandId
          required: true
          schema:
            type: string
          description: 삭제할 브랜드 ID
      responses:
        '204':
          description: 성공적으로 삭제됨
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /categories/lowest:
    get:
      summary: 카테고리별 최저가격 브랜드와 상품 가격, 총액 조회
      tags:
        - Category
      responses:
        '200':
          description: 카테고리별 최저가격 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryLowestResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /categories/{categoryId}/lowest-highest:
    get:
      summary: 특정 카테고리별 최저가 및 최고가 브랜드와 상품 가격 조회
      tags:
        - Category
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
          description: 카테고리 ID
      responses:
        '200':
          description: 카테고리별 최저가 및 최고가 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryLowestHighestResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /products:
    post:
      summary: 상품 추가
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: 등록된 상품 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /products/{productId}:
    put:
      summary: 상품 수정
      tags:
        - Product
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: 상품 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: 수정된 상품 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

    delete:
      summary: 상품 삭제
      tags:
        - Product
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: 상품 ID
      responses:
        '204':
          description: 삭제 성공 (콘텐츠 없음)
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    BrandRequest:
      type: object
      required:
        - brand
      properties:
        brand:
          type: string
          example: "A"

    BrandResponse:
      type: object
      properties:
        brand:
          type: string
          example: "A"

    BrandSetLowestResponse:
      type: object
      properties:
        lowest:
          $ref: '#/components/schemas/BrandCategoryPrices'

    BrandCategoryPrices:
      type: object
      properties:
        brand:
          type: string
          example: "A"
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryPrice'
        totalPrice:
          type: string
          example: "159,000"
          description: 총 가격

    CategoryPrice:
      type: object
      properties:
        category:
          type: string
          example: "상의"
        price:
          type: string
          example: "1,000"
          description: 해당 카테고리의 최저 가격

    CategoryLowestResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryBrandPrice'
        totalPrice:
          type: string
          example: "250,000"
          description: 총 가격

    CategoryBrandPrice:
      type: object
      properties:
        category:
          type: string
          example: "상의"
        brand:
          type: string
          example: "A"
        price:
          type: string
          example: "49,000"
          description: 해당 카테고리-브랜드의 최저 가격
    BrandPrice:
      type: object
      properties:
        brand:
          type: string
          example: "A"
        price:
          type: string
          example: "49,000"
          description: 브랜드별 가격
    CategoryLowestHighestResponse:
      type: object
      properties:
        category:
          type: string
          example: "상의"
        lowest:
          type: array
          items:
            $ref: '#/components/schemas/BrandPrice'
        highest:
          type: array
          items:
            $ref: '#/components/schemas/BrandPrice'



    ProductRequest:
      type: object
      required:
        - brand
        - category
        - price
      properties:
        brand:
          type: string
          maxLength: 10
          example: "A"
          description: 브랜드명
        category:
          type: string
          maxLength: 10
          example: "상의"
          description: 카테고리명
        price:
          type: integer
          minimum: 1
          maximum: 100000000
          example: 49000
          description: 가격

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
          description: 상품 ID
        brand:
          type: string
          example: "A"
          description: 브랜드명
        category:
          type: string
          example: "상의"
          description: 카테고리명
        price:
          type: string
          example: "49,000"
          description: 가격
    ExceptionResponse:
      type: object
      properties:
        status:
          type: integer
          example: 400
        error:
          type: string
          example: "BAD_REQUEST"
        message:
          type: string
          example: "Invalid"
        detail:
          type: string
          example: "Invalid brandId"

  responses:
    ErrorResponse:
      description: 에러 응답
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExceptionResponse'
